{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/user.model.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/users/user-list/user-list.component.css","webpack:///./src/app/users/user-list/user-list.component.html","webpack:///./src/app/users/user-list/user-list.component.ts","webpack:///./src/app/users/user/user.component.css","webpack:///./src/app/users/user/user.component.html","webpack:///./src/app/users/user/user.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container\\\">\\n  <app-users></app-users>\\n\\n  \\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular7';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { UserComponent } from './users/user/user.component';\n\n\nimport { UserListComponent } from './users/user-list/user-list.component';\nimport { UserService } from './shared/user.service';\nimport { FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule} from '@angular/common/http';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    UserComponent,\n    UserListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    NgbModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule,\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class User {\n\n    Id: number;\n     UserName: string;\n    FullName: string;\n    MultipleRoles: string;\n    Status: string;\n  CreateDate: string;\n CreateBy: string;\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { User } from './user.model';\nimport { HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n\n  formData = new User();\n  list: User[];\n  readonly rootURL = 'https://localhost:44376/api';\n  constructor( private http: HttpClient) { }\n\n  postUser(formData: User) {\n   return this.http.post(this.rootURL + '/Users', formData);\n\n  }\n\nrefreshList() {\n  this.http.get(this.rootURL + '/Users')\n  .toPromise().then( res => this.list = res as User[]);\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXItbGlzdC91c2VyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n<!--<tr #ngFor=\\\"let id of UserService.list\\\">\\n  <td>{{id.UserName}}{{id.FullName)) </td>\\n    <td>{{id.MultipleRoles}}{{id.Status)) </td>\\n      <td>{{id.CreateDate}}{{id.CreateBy)) </td>\\n <td> <button class=\\\"btn btn-sm btn-outline-danger\\\">X</button></td>\\n \\n      </tr>\\n    -->\\n\\n    table showing list entered\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  constructor(public UserService: UserService) { }\n\n  ngOnInit() {\n    this.UserService.refreshList();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- create user form using user model class from user model ts-->\\n\\n<!-- #form is local reference for ngForm from angular-->\\n<form #form = \\\"ngForm\\\" (submit) = \\\"onSubmit(form)\\\" >\\n  <div class=\\\"form-group\\\">\\n    <label> USERNAME</label>\\n    <input name=\\\"UserName\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"UserService.formData.UserName\\\" class=\\\"form-control\\\">\\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n      <label> FULLNAME</label>\\n      <input name=\\\"FullName\\\" #FullName=\\\"ngModel\\\" [(ngModel)]=\\\"UserService.formData.FullName\\\" class=\\\"form-control\\\">\\n    </div>\\n  \\n      <div class=\\\"form-group\\\">\\n          <label> MULTIPLE ROLES</label>\\n          <input name=\\\"MultipleRoles\\\" #MultipleRoles=\\\"ngModel\\\" [(ngModel)]=\\\"UserService.formData.MultiplesRoles\\\" class=\\\"form-control\\\">\\n        </div>\\n  \\n        <div class=\\\"form-group\\\">\\n            <label> STATUS</label>\\n            <input name=\\\"Status\\\" #Status=\\\"ngModel\\\" [(ngModel)]=\\\"UserService.formData.Status\\\" class=\\\"form-control\\\">\\n          </div>\\n  \\n \\n    <div class=\\\"form-group\\\">\\n              <label> Create Date</label>\\n              <input name=\\\"CreateDate\\\" type =\\\"date\\\" #CreateDate=\\\"ngModel\\\" [(ngModel)]=\\\"UserService.formData.CreateDate\\\" class=\\\"form-control\\\">\\n    \\n</div>\\n            \\n<div class=\\\"form-group\\\">\\n    <label> Create By </label>\\n    <input name=\\\"CreateBy\\\" #CreateBy=\\\"ngModel\\\" [(ngModel)]=\\\"UserService.formData.CreateBy\\\" class=\\\"form-control\\\">\\n</div>\\n            \\n   \\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"button\\\" value=\\\"SUBMIT\\\" class=\\\"btn btn-lg btn-block\\\">\\n  </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from 'src/app/shared/user.service';\nimport { FormsModule, NgForm} from '@angular/forms';\n// import { ToastrService } from 'ngx-toastr';\n\n\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  // constructor created to use user service class\n// tslint:disable-next-line: no-shadowed-variable\n  constructor( public UserService: UserService) { }\n               //public toastr: ToastrService\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n    form.resetForm();\n    this.UserService.formData = {\n      Id : null,\n      UserName: '',\n      FullName: '',\n      MultipleRoles: '',\n      Status: '',\n      CreateDate: '',\n      CreateBy: '',\n    };\n   }\n  }\n\n  onSubmit(form: NgForm) {\nthis.insertRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\nthis.UserService.postUser(form.value).subscribe( res => {\n // this.toastr.success('Inserted succesfully');\n  this.resetForm(form);\n});\n}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h1 class =\\\"display-4 text-center\\\"> User Management Page</h1>\\n  <hr>\\n  \\n  <div class=\\\"row\\\">\\n   <!-- <h3 class=\\\"display-5 text-center\\\"> Accounts </h3>-->\\n      <div class=\\\"col-md-5\\\">    <!-- create column with space 5-->\\n  <!-- inside this column is user component for user form. add using selector from user ts-->\\n  <app-user></app-user>\\n      </div>    \\n  \\n      <div class=\\\"col-md-7\\\">    <!-- create column with space 7-->\\n  <!-- inside this column is user-list. add using component selector from user-list ts-->\\n  <app-user-list></app-user-list>\\n      </div>  \\n    </div>\\n  \\n\\n\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}